schema_version: 1.2.0
id: CVE-2020-26243
aliases:
- GHSA-85rr-4rh9-hhwh
modified: 2020-12-07T20:49Z
published: 2020-11-25T17:15Z
details: 'Nanopb is a small code-size Protocol Buffers implementation. In Nanopb before
  versions 0.4.4 and 0.3.9.7, decoding specifically formed message can leak memory
  if dynamic allocation is enabled and an oneof field contains a static submessage
  that contains a dynamic field, and the message being decoded contains the submessage
  multiple times. This is rare in normal messages, but it is a concern when untrusted
  data is parsed. This is fixed in versions 0.3.9.7 and 0.4.4. The following workarounds
  are available: 1) Set the option `no_unions` for the oneof field. This will generate
  fields as separate instead of C union, and avoids triggering the problematic code.
  2) Set the type of the submessage field inside oneof to `FT_POINTER`. This way the
  whole submessage will be dynamically allocated and the problematic code is not executed.
  3) Use an arena allocator for nanopb, to make sure all memory can be released afterwards.'
severity:
- type: CVSS_V3
  score: 7.5
- type: CVSS_V2
  score: 4.3
affected:
- package:
    name: nanopb
    cpe: cpe:2.3:a:nanopb_project:nanopb
- ranges:
  - type: GIT
    repo: https://github.com/nanopb/nanopb
    events:
    - introduced: '0'
    - fixed: 4fe23595732b6f1254cfc11a9b8d6da900b55b0c
- database_specific:
    CWE:
    - CWE-119
    - CWE-20
    CVSS:
      Score: 7.5
      Severity: HIGH
      Code: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
references:
- type: ADVISORY
  url: https://github.com/nanopb/nanopb/security/advisories/GHSA-85rr-4rh9-hhwh
- type: WEB
  url: https://github.com/nanopb/nanopb/blob/2b48a361786dfb1f63d229840217a93aae064667/CHANGELOG.txt
- type: REPORT
  url: https://github.com/nanopb/nanopb/issues/615
- type: FIX
  url: https://github.com/nanopb/nanopb/commit/4fe23595732b6f1254cfc11a9b8d6da900b55b0c
